// <auto-generated />
using System;
using AventureoBack.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aventureo_Back.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250515170647_migracionInicial")]
    partial class migracionInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AventureoBack.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("AventureoBack.Models.Gasto", b =>
                {
                    b.Property<int>("idGasto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idGasto"));

                    b.Property<decimal>("cantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idCategoria")
                        .HasColumnType("int");

                    b.Property<int>("idViaje")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idGasto");

                    b.HasIndex("idCategoria");

                    b.HasIndex("idViaje");

                    b.ToTable("Gasto");
                });

            modelBuilder.Entity("AventureoBack.Models.PartePlan", b =>
                {
                    b.Property<int>("idPartePlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPartePlan"));

                    b.Property<string>("comentario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idPlan")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idPartePlan");

                    b.HasIndex("idPlan");

                    b.ToTable("PartePlan");
                });

            modelBuilder.Entity("AventureoBack.Models.Plan", b =>
                {
                    b.Property<int>("idPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idPlan"));

                    b.Property<int>("duracion")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("lugar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioEstimado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("valoracion")
                        .HasColumnType("int");

                    b.HasKey("idPlan");

                    b.HasIndex("idUsuario");

                    b.ToTable("Plan");
                });

            modelBuilder.Entity("AventureoBack.Models.Usuario", b =>
                {
                    b.Property<int>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuario"));

                    b.Property<bool?>("RolAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("fecNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idUsuario");

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("AventureoBack.Models.Viaje", b =>
                {
                    b.Property<int>("idViaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idViaje"));

                    b.Property<decimal>("cantidadTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("personas")
                        .HasColumnType("int");

                    b.HasKey("idViaje");

                    b.HasIndex("idUsuario");

                    b.ToTable("Viaje");
                });

            modelBuilder.Entity("AventureoBack.Models.Gasto", b =>
                {
                    b.HasOne("AventureoBack.Models.Categoria", "categoria")
                        .WithMany("Gastos")
                        .HasForeignKey("idCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AventureoBack.Models.Viaje", "viaje")
                        .WithMany("gastos")
                        .HasForeignKey("idViaje")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("viaje");
                });

            modelBuilder.Entity("AventureoBack.Models.PartePlan", b =>
                {
                    b.HasOne("AventureoBack.Models.Plan", "plan")
                        .WithMany("partesPlan")
                        .HasForeignKey("idPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("plan");
                });

            modelBuilder.Entity("AventureoBack.Models.Plan", b =>
                {
                    b.HasOne("AventureoBack.Models.Usuario", "usuario")
                        .WithMany("planes")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("AventureoBack.Models.Viaje", b =>
                {
                    b.HasOne("AventureoBack.Models.Usuario", "usuario")
                        .WithMany("viajes")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("AventureoBack.Models.Categoria", b =>
                {
                    b.Navigation("Gastos");
                });

            modelBuilder.Entity("AventureoBack.Models.Plan", b =>
                {
                    b.Navigation("partesPlan");
                });

            modelBuilder.Entity("AventureoBack.Models.Usuario", b =>
                {
                    b.Navigation("planes");

                    b.Navigation("viajes");
                });

            modelBuilder.Entity("AventureoBack.Models.Viaje", b =>
                {
                    b.Navigation("gastos");
                });
#pragma warning restore 612, 618
        }
    }
}
